name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install server dependencies
      run: |
        cd server
        npm install
    
    - name: Run server tests
      run: |
        cd server
        npm test
    
    - name: Install client dependencies
      run: |
        cd client
        npm install
    
    - name: Run client tests
      run: |
        cd client
        npm test
    
    - name: Lint server code
      run: |
        cd server
        npm run lint
    
    - name: Lint client code
      run: |
        cd client
        npm run lint

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Build server
      run: |
        cd server
        npm install
        npm run build --if-present
    
    - name: Build client
      run: |
        cd client
        npm install
        npm run build
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker images
      run: |
        docker-compose build

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run npm audit on server
      run: |
        cd server
        npm audit --audit-level=high
    
    - name: Run npm audit on client
      run: |
        cd client
        npm audit --audit-level=high
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
name: Docker CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Removed Docker Hub login since we're not pushing images
    # - name: Login to Docker Hub
    #   if: github.event_name != 'pull_request'
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and test server
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: openmediasearch-server:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and test client
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: false
        load: true
        tags: openmediasearch-client:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test with Docker Compose
      run: |
        docker-compose -f docker-compose.dev.yml up -d
        # Add tests to run against your containers here
        # For example: docker exec oms-app npm test
        docker-compose -f docker-compose.dev.yml down

  # Deployment job removed for now
  # deploy:
  #   needs: build-and-test
  #   if: github.event_name != 'pull_request'
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #   - uses: actions/checkout@v4
  #
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
  #
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #
  #   - name: Build and push server
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: .
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/openmediasearch-server:latest
  #       cache-from: type=gha
  #       cache-to: type=gha,mode=max
  #
  #   - name: Build and push client
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: ./client
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/openmediasearch-client:latest
  #       cache-from: type=gha
  #       cache-to: type=gha,mode=max
  #
  #   # If you're using Railway for deployment
  #   - name: Install Railway CLI
  #     run: npm i -g @railway/cli
  #
  #   - name: Deploy to Railway
  #     run: railway up
  #     env:
  #       RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}